name: Sync to OSS Repository

on:
  push:
    branches: [main]
    paths:
      - 'src/core/**'
      - 'components/ui/**'
      - 'public/**'
      - 'docs/oss/**'
      - 'package.json'
      - 'README.oss.md'
      - 'LICENSE.oss'
  workflow_dispatch:
    inputs:
      force_sync:
        description: 'Force sync even without changes'
        required: false
        default: false
        type: boolean

env:
  OSS_REPO_NAME: 'kouden-oss'
  OSS_REPO_OWNER: 'otomatty'

jobs:
  sync-to-oss:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout private repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create OSS temp directory
        run: |
          mkdir -p oss-temp
          echo "📁 Created OSS temp directory"

      - name: Copy core files
        run: |
          # Core source files
          if [ -d "src/core" ]; then
            cp -r src/core/* oss-temp/src/ 2>/dev/null || mkdir -p oss-temp/src
            echo "✅ Copied src/core to oss-temp/src"
          fi
          
          # UI components
          if [ -d "components/ui" ]; then
            mkdir -p oss-temp/components
            cp -r components/ui oss-temp/components/
            echo "✅ Copied components/ui"
          fi
          
          # Public assets
          if [ -d "public" ]; then
            cp -r public/* oss-temp/public/ 2>/dev/null || mkdir -p oss-temp/public
            echo "✅ Copied public assets"
          fi
          
          # OSS documentation
          if [ -d "docs/oss" ]; then
            cp -r docs/oss/* oss-temp/docs/ 2>/dev/null || mkdir -p oss-temp/docs
            echo "✅ Copied OSS documentation"
          fi

      - name: Copy OSS-specific files
        run: |
          # README for OSS
          if [ -f "README.oss.md" ]; then
            cp README.oss.md oss-temp/README.md
            echo "✅ Copied README.oss.md -> README.md"
          fi
          
          # OSS License
          if [ -f "LICENSE.oss" ]; then
            cp LICENSE.oss oss-temp/LICENSE
            echo "✅ Copied LICENSE.oss -> LICENSE"
          fi
          
          # Other essential files
          cp .gitignore oss-temp/ 2>/dev/null || true
          cp next.config.* oss-temp/ 2>/dev/null || true
          cp tailwind.config.* oss-temp/ 2>/dev/null || true
          cp tsconfig.json oss-temp/ 2>/dev/null || true
          cp biome.json oss-temp/ 2>/dev/null || true

      - name: Prepare OSS package.json
        run: |
          node scripts/oss-sync/prepare-oss-package.js
          echo "✅ Prepared OSS package.json"

      - name: Remove premium references
        run: |
          node scripts/oss-sync/remove-premium-refs.js
          echo "✅ Removed premium references"

      - name: Verify OSS build
        run: |
          cd oss-temp
          npm install --production
          npm run build
          echo "✅ OSS version builds successfully"

      - name: Setup OSS repository
        run: |
          git clone https://${{ secrets.OSS_SYNC_TOKEN }}@github.com/${{ env.OSS_REPO_OWNER }}/${{ env.OSS_REPO_NAME }}.git oss-repo
          echo "✅ Cloned OSS repository"

      - name: Sync changes to OSS repository
        run: |
          cd oss-repo
          
          # Configure Git
          git config user.name "OSS Sync Bot"
          git config user.email "oss-sync@kouden.app"
          
          # Remove existing files (except .git)
          find . -mindepth 1 -name '.git' -prune -o -type f -delete
          find . -mindepth 1 -name '.git' -prune -o -type d -empty -delete
          
          # Copy new files
          cp -r ../oss-temp/* .
          
          # Add all changes
          git add .
          
          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "ℹ️ No changes to commit"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            # Commit changes
            COMMIT_MSG="chore: sync from private repository"
            if [ "${{ github.event_name }}" == "push" ]; then
              COMMIT_MSG="$COMMIT_MSG - $(echo '${{ github.event.head_commit.message }}' | head -n1)"
            fi
            COMMIT_MSG="$COMMIT_MSG [$(date +'%Y-%m-%d %H:%M:%S')]"
            
            git commit -m "$COMMIT_MSG"
            git push
            
            echo "✅ Changes synced to OSS repository"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi
        id: sync

      - name: Create release (on tag)
        if: startsWith(github.ref, 'refs/tags/') && steps.sync.outputs.has_changes == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.OSS_SYNC_TOKEN }}
        with:
          repo: ${{ env.OSS_REPO_OWNER }}/${{ env.OSS_REPO_NAME }}
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            ## 🎉 Release ${{ github.ref_name }}
            
            ### 📋 Changes
            This release includes the latest features and improvements from the private repository.
            
            ### 📦 Downloads
            - [Source code (zip)](https://github.com/${{ env.OSS_REPO_OWNER }}/${{ env.OSS_REPO_NAME }}/archive/refs/tags/${{ github.ref_name }}.zip)
            - [Source code (tar.gz)](https://github.com/${{ env.OSS_REPO_OWNER }}/${{ env.OSS_REPO_NAME }}/archive/refs/tags/${{ github.ref_name }}.tar.gz)
            
            ### 🔗 Links
            - [Documentation](https://github.com/${{ env.OSS_REPO_OWNER }}/${{ env.OSS_REPO_NAME }}/blob/main/docs/)
            - [Issues](https://github.com/${{ env.OSS_REPO_OWNER }}/${{ env.OSS_REPO_NAME }}/issues)
            - [Contributing](https://github.com/${{ env.OSS_REPO_OWNER }}/${{ env.OSS_REPO_NAME }}/blob/main/CONTRIBUTING.md)

      - name: Cleanup
        if: always()
        run: |
          rm -rf oss-temp oss-repo
          echo "🧹 Cleaned up temporary directories"

      - name: Summary
        run: |
          echo "## 📊 Sync Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Repository**: ${{ env.OSS_REPO_OWNER }}/${{ env.OSS_REPO_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.sync.outputs.has_changes }}" == "true" ]; then
            echo "- **Status**: ✅ Changes synced successfully" >> $GITHUB_STEP_SUMMARY
          else
            echo "- **Status**: ℹ️ No changes to sync" >> $GITHUB_STEP_SUMMARY
          fi
          echo "- **Timestamp**: $(date +'%Y-%m-%d %H:%M:%S UTC')" >> $GITHUB_STEP_SUMMARY 